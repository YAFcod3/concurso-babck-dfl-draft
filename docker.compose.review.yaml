version: '3.8'

services:
  my-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_app
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - TZ=UTC
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_redis_password
      - MONGO_URI=mongodb://root:example@mongo:27017/
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:latest
    container_name: redis_server_exchange_rate
    command: redis-server --requirepass your_redis_password
    ports:
      - "6379:6379"
    environment:
      - TZ=UTC
      - REDIS_APPENDONLY=yes
      - REDIS_PASSWORD=your_redis_password
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "your_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:7.0
    container_name: mongo_server_exchange_rate
    ports:
      - "27017:27017"
    environment:
      - TZ=UTC
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - app_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    environment:
      - TZ=UTC
    ports:
      - "9090:9090"
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - TZ=UTC
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_healthy
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  app_network:
    driver: bridge
