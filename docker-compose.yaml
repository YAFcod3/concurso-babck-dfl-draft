version: '3.8'

services:
  # my-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: go_app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - redis
  #     - mongo
  #   restart: always
  #   networks:
  #     - app_network

  redis:
    image: redis:latest
    container_name: redis_server_exchange_rate
    ports:
      - "6379:6379"
    environment:
      - REDIS_APPENDONLY=yes
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network

  mongo:
    image: mongo:7.0
    container_name: mongo_server_exchange_rate
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: always
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always
    networks:
      - app_network

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  app_network:
    driver: bridge
